window.jest_html_reporters_callback__({"numFailedTestSuites":4,"numFailedTests":1,"numPassedTestSuites":0,"numPassedTests":3,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":3,"numTodoTests":0,"numTotalTestSuites":4,"numTotalTests":4,"startTime":1709098649073,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\blog-app\\src\\Button.test.js","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\blog-app\\src\\Button.test.js: Support for the experimental syntax 'jsx' isn't currently enabled (7:10):\n\n    \u001b[0m \u001b[90m  5 |\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m  6 |\u001b[39m test(\u001b[32m'renders Button component with custom label'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 |\u001b[39m   render(\u001b[33m<\u001b[39m\u001b[33mButton\u001b[39m label\u001b[33m=\u001b[39m\u001b[32m\"Custom Label\"\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m    |\u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m  8 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m  9 |\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 10 |\u001b[39m test(\u001b[32m'renders Button component with left and right icons'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n    Add @babel/preset-react (https://github.com/babel/babel/tree/main/packages/babel-preset-react) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx) to the 'plugins' section to enable parsing.\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:74:19)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1487:19)\u001b[22m\n      \u001b[2mat Parser.expectOnePlugin (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1552:18)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1274:16)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:703:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:246:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3112:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:245:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2735:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1035:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:877:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:766:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:724:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:709:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:215:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:206:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3107:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:206:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:636:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:417:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:366:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1386:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1359:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1327:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2572:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2515:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1818:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1159:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:703:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:246:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3112:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:245:17)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\blog-app\\src\\DropDown.test.js","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\blog-app\\src\\DropDown.test.js: Support for the experimental syntax 'jsx' isn't currently enabled (7:10):\n\n    \u001b[0m \u001b[90m  5 |\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m  6 |\u001b[39m test(\u001b[32m'renders DropDown component with custom label'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 |\u001b[39m   render(\u001b[33m<\u001b[39m\u001b[33mDropDown\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m    |\u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m  8 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m  9 |\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 10 |\u001b[39m \u001b[90m// test('renders DropDown component with custom data', () => {\u001b[39m\u001b[0m\n\n    Add @babel/preset-react (https://github.com/babel/babel/tree/main/packages/babel-preset-react) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx) to the 'plugins' section to enable parsing.\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:74:19)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1487:19)\u001b[22m\n      \u001b[2mat Parser.expectOnePlugin (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1552:18)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1274:16)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:703:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:246:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3112:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:245:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2735:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1035:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:877:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:766:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:724:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:709:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:215:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:206:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3107:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:206:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:636:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:417:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:366:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1386:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1359:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1327:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2572:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2515:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1818:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1159:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:703:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:246:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3112:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:245:17)\u001b[22m\n","testResults":[]},{"numFailingTests":1,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1709098653373,"runtime":2992,"slow":false,"start":1709098650381},"testFilePath":"D:\\blog-app\\src\\App.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCalculator tests › add 2 numbers to get success response\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m8\u001b[39m\n    Received: \u001b[31m7\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 88 |\u001b[39m   test(\u001b[32m\"add 2 numbers to get success response\"\u001b[39m\u001b[33m,\u001b[39m()\u001b[33m=>\u001b[39m{\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 89 |\u001b[39m     \u001b[36mconst\u001b[39m val\u001b[33m=\u001b[39mmathsOps\u001b[33m.\u001b[39msum(\u001b[35m3\u001b[39m\u001b[33m,\u001b[39m\u001b[35m4\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 90 |\u001b[39m     expect(val)\u001b[33m.\u001b[39mtoBe(\u001b[35m8\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 91 |\u001b[39m   })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 92 |\u001b[39m   test(\u001b[32m\"divide 2 numbers\"\u001b[39m\u001b[33m,\u001b[39m()\u001b[33m=>\u001b[39m{\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 93 |\u001b[39m     \u001b[36mconst\u001b[39m val\u001b[33m=\u001b[39mmathsOps\u001b[33m.\u001b[39mdivide(\u001b[35m6\u001b[39m\u001b[33m,\u001b[39m\u001b[35m2\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/App.test.js\u001b[39m\u001b[0m\u001b[2m:90:17)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["Calculator tests"],"duration":3,"failureMessages":[],"fullName":"Calculator tests add 2 numbers","status":"passed","title":"add 2 numbers"},{"ancestorTitles":["Calculator tests"],"duration":4,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m8\u001b[39m\nReceived: \u001b[31m7\u001b[39m\n    at Object.<anonymous> (D:\\blog-app\\src\\App.test.js:90:17)\n    at Promise.then.completed (D:\\blog-app\\node_modules\\jest-circus\\build\\utils.js:391:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\blog-app\\node_modules\\jest-circus\\build\\utils.js:316:10)\n    at _callCircusTest (D:\\blog-app\\node_modules\\jest-circus\\build\\run.js:218:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\blog-app\\node_modules\\jest-circus\\build\\run.js:155:3)\n    at _runTestsForDescribeBlock (D:\\blog-app\\node_modules\\jest-circus\\build\\run.js:66:9)\n    at _runTestsForDescribeBlock (D:\\blog-app\\node_modules\\jest-circus\\build\\run.js:60:9)\n    at run (D:\\blog-app\\node_modules\\jest-circus\\build\\run.js:25:3)"],"fullName":"Calculator tests add 2 numbers to get success response","status":"failed","title":"add 2 numbers to get success response"},{"ancestorTitles":["Calculator tests"],"duration":1,"failureMessages":[],"fullName":"Calculator tests divide 2 numbers","status":"passed","title":"divide 2 numbers"},{"ancestorTitles":["Calculator tests"],"duration":0,"failureMessages":[],"fullName":"Calculator tests multiple 2 numbers","status":"passed","title":"multiple 2 numbers"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"D:\\blog-app\\src\\Sum.test.js","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: D:\\blog-app\\src\\Sum.test.js: Support for the experimental syntax 'jsx' isn't currently enabled (5:12):\n\n    \u001b[0m \u001b[90m 3 |\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 4 |\u001b[39m test(\u001b[32m'get by role'\u001b[39m\u001b[33m,\u001b[39m()\u001b[33m=>\u001b[39m{\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 |\u001b[39m     render(\u001b[33m<\u001b[39m\u001b[33mSum\u001b[39m\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\n    \u001b[0m \u001b[90m   |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 6 |\u001b[39m     \u001b[36mconst\u001b[39m inputField\u001b[33m=\u001b[39mscreen\u001b[33m.\u001b[39mgetByRole(\u001b[32m'textbox'\u001b[39m)\u001b[0m\n    \u001b[0m \u001b[90m 7 |\u001b[39m     expect(inputField)\u001b[33m.\u001b[39mtoBeInTheDocument()\u001b[0m\n    \u001b[0m \u001b[90m 8 |\u001b[39m   })\u001b[0m\n\n    Add @babel/preset-react (https://github.com/babel/babel/tree/main/packages/babel-preset-react) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx) to the 'plugins' section to enable parsing.\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:74:19)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1487:19)\u001b[22m\n      \u001b[2mat Parser.expectOnePlugin (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1552:18)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1274:16)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:703:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:246:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3112:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:245:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2735:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1035:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:877:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:766:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:724:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:709:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:215:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:206:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3107:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:206:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:636:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:417:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:366:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1386:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1359:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1327:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2572:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2515:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1818:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1159:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:703:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:246:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3112:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:245:17)\u001b[22m\n","testResults":[]}],"config":{"bail":0,"changedFilesWithAncestor":false,"collectCoverage":false,"collectCoverageFrom":[],"coverageDirectory":"D:\\blog-app\\coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":3,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["D:\\blog-app\\node_modules\\jest-html-reporters\\index.js",{}]],"rootDir":"D:\\blog-app","runTestsByPath":false,"skipFilter":false,"testFailureExitCode":1,"testPathPattern":"","testSequencer":"D:\\blog-app\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"watch":false,"watchAll":false,"watchman":true},"endTime":1709098653878,"_reporterOptions":{"publicPath":"D:\\blog-app","filename":"jest_html_reporters.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})